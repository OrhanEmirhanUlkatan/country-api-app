{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emirhan\\\\Desktop\\\\Emirhan\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v2/all\").then(response => setCountries(response.data)).catch(error => console.log({\n      error\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"React Router\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => countries.map((country, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/country/${country.alpha3Code}`,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/country/:code\",\n        render: renderProps => {\n          const country = countries.find(country => country.alpha3Code === renderProps.match.params.code);\n          return /*#__PURE__*/_jsxDEV(Country, { ...renderProps,\n            country: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n\n_c = App;\n\nconst Country = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.country.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital:\", props.country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.country.flag,\n      alt: props.country.name,\n      style: {\n        width: 250\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Country;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Country\");","map":{"version":3,"sources":["C:/Users/Emirhan/Desktop/Emirhan/my-app/src/App.js"],"names":["logo","axios","React","useEffect","useState","BrowserRouter","Router","Route","Link","App","countries","setCountries","get","then","response","data","catch","error","console","log","map","country","i","alpha3Code","name","renderProps","find","match","params","code","Country","props","capital","flag","width"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CACFW,GADH,CACO,kCADP,EAEGC,IAFH,CAEQC,QAAQ,IAAIH,YAAY,CAACG,QAAQ,CAACC,IAAV,CAFhC,EAGGC,KAHH,CAGSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ,CAHlB;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,mCACe,GADf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,MAAM,EAAE,MACNP,SAAS,CAACU,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACZ;AAAa,UAAA,SAAS,EAAC,SAAvB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWD,OAAO,CAACE,UAAW,EAAzC;AAAA,mCACE;AAAA,wBAAKF,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,WAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAJJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAiBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AACE,QAAA,MAAM,EAAEG,WAAW,IAAI;AACrB,gBAAMJ,OAAO,GAAGX,SAAS,CAACgB,IAAV,CACdL,OAAO,IAAIA,OAAO,CAACE,UAAR,KACTE,WAAW,CAACE,KAAZ,CAAkBC,MAAlB,CAAyBC,IAFb,CAAhB;AAIA,8BAAO,QAAC,OAAD,OAAaJ,WAAb;AAA0B,YAAA,OAAO,EAAEJ;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAzCuBZ,G;;KAAAA,G;;AA2CxB,MAAMqB,OAAO,GAAGC,KAAK,IAAI;AACvB,sBACE;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACV,OAAN,CAAcG;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAYO,KAAK,CAACV,OAAN,CAAcW,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,GAAG,EAAED,KAAK,CAACV,OAAN,CAAcY,IADrB;AAEE,MAAA,GAAG,EAAEF,KAAK,CAACV,OAAN,CAAcG,IAFrB;AAGE,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT;AAHT;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;;MAAMJ,O","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\n\nexport default function App() {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v2/all\")\n      .then(response => setCountries(response.data))\n      .catch(error => console.log({ error }));\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1>\n          React Router{\" \"}\n        </h1>\n        <Route\n          path=\"/\"\n          exact\n          render={() =>\n            countries.map((country, i) => (\n              <div key={i} className=\"country\">\n                <Link to={`/country/${country.alpha3Code}`}>\n                  <h3>{country.name}</h3>\n                </Link>\n              </div>\n            ))\n          }\n        />\n        <Route path=\"/country/:code\"\n          render={renderProps => {\n            const country = countries.find(\n              country => country.alpha3Code ===\n                renderProps.match.params.code\n            );\n            return <Country {...renderProps} country={country} />\n          }}\n        />\n      </div>\n    </Router>\n  );\n}\n\nconst Country = props => {\n  return (\n    <div>\n      <h1>{props.country.name}</h1>\n      <p>Capital:{props.country.capital}</p>\n      <img\n        src={props.country.flag}\n        alt={props.country.name}\n        style={{ width: 250 }}\n      />\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}